# run inla model (just for cases)
formula = Cases ~ f(idarea, model = "bym", graph = g, hyper = list(prec.unstruct = list(prior = sdunif), prec.spatial = list(prior = sdunif)))
mod <- inla(formula, family="poisson", data=map,control.compute=list(dic = TRUE, cpo = TRUE, waic = TRUE), control.predictor=list(compute=TRUE, cdf=c(log(1))))
summary(mod)
plot(mod)
# add fitted values to dataframe
map$fitted_values <-  mod$summary.fitted.values[, "mean"]
ggplot() +
geom_sf(data = shapefile, size = 1.5, color = "black", fill = Municipality) +
ggtitle("Catanduanes") +
coord_sf()
ggplot() +
geom_sf(data = shapefile, size = 1.5, color = "black", fill = "Municipality") +
ggtitle("Catanduanes") +
coord_sf()
# load data
total_data <- read.csv('../aggregated_data/CATANDUANES_total.csv')
ggplot() +
geom_sf(data = shapefile, size = 1.5, color = "black", fill = "cyan1") +
ggtitle("Catanduanes") +
coord_sf()
ggplot() +
geom_polygon(data = shapefile)
View(map[[6]][[1]])
library(sp)
library(rgdal)
install(rgdal)
shapefile = readOGR('catanduanes_shapefile.shp')
install.packages('rgdal_1.6-7.tar.gz', repos = NULL, type = 'source')
library(rgdal)
setwd('C:/Users/diana/Downloads')
install.packages('rgdal_1.6-7.tar.gz', repos = NULL, type = 'source')
install.packages('rgdal_1.6-6.tar.gz', repos = NULL, type = 'source')
url <- "https://download.r-forge.r-project.org/bin/windows/contrib/4.4/rgdal_1.6-7.zip"
install.packages(url, type="source", repos=NULL)
library(rgdal)
library(sp)
library(rgdal)
library(sp)
library(rgdal)
shp <- readOGR('catanduanes_shapefile.shp')
getwd()
setwd('D:/Acads/2425B/CS199/cs198-scl-envi-2425/from_scratch')
shp <- readOGR('catanduanes_shapefile.shp')
View(shp)
rm(list=ls())
library(dplyr)
library(tidyr)
library(INLA)
library(spdep)
library(lubridate)
library(stringr)
library(purrr)
library(zoo)
library(tibble)
library(tsibble)
library(Matrix)
library(ggplot2)
library(INLAutils)
library(rgdal)
library(sp)
# load data
total_data <- read.csv('../aggregated_data/CATANDUANES_total.csv')
# load shapefile
shapefile <- readOGR('catanduanes_shapefile.shp')
ggplot() +
geom_sf(data = shapefile, size = 1.5, color = "black", fill = "cyan1") +
ggtitle("Catanduanes") +
coord_sf()
View(shapefile)
ggplot() +
geom_polygon(data = shp, colour = "black", fill = NA)
ggplot() +
geom_polygon(data = shapefile, colour = "black", fill = NA)
ggplot() +
geom_polygon(data = shapefile, colour = "black", fill = NA,  aes(x = long, y = lat, group = group))
ggplot() +
geom_polygon(data = shapefile, colour = "black", fill = NA,  aes(x = lat, y = long, group = group))
ggplot() +
geom_polygon(data = shapefile, colour = "black", fill = NA,  aes(x = long, y = lat, group = group))
# x axis limits
sp + xlim(min, max)
map <- ggplot() +
geom_polygon(data = shapefile, colour = "black", fill = NA,  aes(x = long, y = lat, group = group))
# x axis limits
map + xlim(min, max)
ggplot() +
geom_polygon(data = shapefile, colour = "black", fill = NA,  aes(x = long, y = lat, group = group)) +
coord_fixed()
rm(list=ls())
library(dplyr)
library(tidyr)
library(INLA)
library(spdep)
library(lubridate)
library(stringr)
library(purrr)
library(zoo)
library(tibble)
library(tsibble)
library(Matrix)
library(ggplot2)
library(INLAutils)
library(rgdal)
library(sp)
# load data
total_data <- read.csv('../aggregated_data/CATANDUANES_total.csv')
# load shapefile
shapefile <- readOGR('catanduanes_shapefile.shp')
ggplot() +
geom_polygon(data = shapefile, colour = "black", fill = NA,  aes(x = long, y = lat, group = group)) +
coord
rm(list=ls())
library(dplyr)
library(tidyr)
library(INLA)
library(spdep)
library(lubridate)
library(stringr)
library(purrr)
library(zoo)
library(tibble)
library(tsibble)
library(Matrix)
library(ggplot2)
library(INLAutils)
library(rgdal)
library(sp)
# load data
total_data <- read.csv('../aggregated_data/CATANDUANES_total.csv')
# load shapefile
shapefile <- readOGR('catanduanes_shapefile.shp')
ggplot() +
geom_polygon(data = shapefile, colour = "black", fill = NA,  aes(x = long, y = lat, group = group)) +
coord
ggplot() +
geom_polygon(data = shapefile, colour = "black", fill = NA,  aes(x = long, y = lat, group = group)) +
coord_fixed()
sf::sf_use_s2(FALSE)
# define prior
sdunif = "expression: logdens=-log_precision/2; return(logdens);"
pc_prior <- list(
prec = list(
prior = "pc.prec",
param = c(0.5 / 0.31, 0.01)
),
phi = list(
prior = "pc",
param = c(0.5, 2/3)
)
)
# build adjancency matrix from shapefile
nb <- poly2nb(shapefile)
nb2INLA("map.adj", nb)
g <- inla.read.graph(filename = "map.adj")
# define index for every polygon
shapefile$idarea <- 1:nrow(shapefile@data)
shapefile@data <- shapefile@data %>%
rename(Municipality = Labels)
shapefile@data <- shapefile@data %>%
rename(Municipality = Labels)
shapefile@data <- shapefile@data %>%
full_join(total_data, by="Municipality")
# remove unnecessary columns
shapefile@data <- select(shapefile@data,-c(X,FID))
# run inla model (just for cases)
formula = Cases ~ f(idarea, model = "bym", graph = g, hyper = list(prec.unstruct = list(prior = sdunif), prec.spatial = list(prior = sdunif)))
mod <- inla(formula, family="poisson", data=map,control.compute=list(dic = TRUE, cpo = TRUE, waic = TRUE), control.predictor=list(compute=TRUE, cdf=c(log(1))))
# run inla model (just for cases)
formula = Cases ~ f(idarea, model = "bym", graph = g, hyper = list(prec.unstruct = list(prior = sdunif), prec.spatial = list(prior = sdunif)))
mod <- inla(formula, family="poisson", data=shapefile@data,control.compute=list(dic = TRUE, cpo = TRUE, waic = TRUE), control.predictor=list(compute=TRUE, cdf=c(log(1))))
summary(mod)
plot(mod)
# add fitted values to dataframe
shapeile@data$fitted_values <-  mod$summary.fitted.values[, "mean"]
# add fitted values to dataframe
shapefile@data$fitted_values <-  mod$summary.fitted.values[, "mean"]
View(shapefile@data)
ggplot() +
geom_polygon(data = shapefile, colour = "black", fill = NA,  aes(x = long, y = lat, group = group, fill=Cases)) +
coord_fixed()
ggplot() +
geom_polygon(data = shapefile, colour = "black", aes(x = long, y = lat, group = group, fill=Cases)) +
coord_fixed()
ggplot() +
geom_polygon(data = shapefile, colour = "black", aes(x = long, y = lat, group = group, fill=Municipality)) +
coord_fixed()
ggplot() +
geom_polygon(data = shapefile, colour = "black", fill = NA,  aes(x = long, y = lat, group = group, fill=Cases)) +
coord_fixed()
# add fitted values to dataframe
shapefile@data$bym <-  mod$summary.fitted.values[, "mean"]
rm(list=ls())
library(dplyr)
library(tidyr)
library(INLA)
library(spdep)
library(lubridate)
library(stringr)
library(purrr)
library(zoo)
library(tibble)
library(tsibble)
library(Matrix)
library(ggplot2)
library(INLAutils)
library(rgdal)
library(sp)
# load data
total_data <- read.csv('../aggregated_data/CATANDUANES_total.csv')
# load shapefile
shapefile <- readOGR('catanduanes_shapefile.shp')
ggplot() +
geom_polygon(data = shapefile, colour = "black", fill = NA,  aes(x = long, y = lat, group = group, fill=Cases)) +
coord_fixed()
sf::sf_use_s2(FALSE)
# define prior
sdunif = "expression: logdens=-log_precision/2; return(logdens);"
pc_prior <- list(
prec = list(
prior = "pc.prec",
param = c(0.5 / 0.31, 0.01)
),
phi = list(
prior = "pc",
param = c(0.5, 2/3)
)
)
# build adjancency matrix from shapefile
nb <- poly2nb(shapefile)
nb2INLA("map.adj", nb)
g <- inla.read.graph(filename = "map.adj")
# define index for every polygon
shapefile$idarea <- 1:nrow(shapefile@data)
# combine data with shapefile
shapefile@data <- shapefile@data %>%
rename(Municipality = Labels)
shapefile@data <- shapefile@data %>%
full_join(total_data, by="Municipality")
# remove unnecessary columns
shapefile@data <- select(shapefile@data,-c(X,FID))
# run inla model (just for cases)
formula = Cases ~ f(idarea, model = "bym", graph = g, hyper = list(prec.unstruct = list(prior = sdunif), prec.spatial = list(prior = sdunif)))
mod$bym <- inla(formula, family="poisson", data=shapefile@data,control.compute=list(dic = TRUE, cpo = TRUE, waic = TRUE), control.predictor=list(compute=TRUE, cdf=c(log(1))))
rm(list=ls())
library(dplyr)
library(tidyr)
library(INLA)
library(spdep)
library(lubridate)
library(stringr)
library(purrr)
library(zoo)
library(tibble)
library(tsibble)
library(Matrix)
library(ggplot2)
library(INLAutils)
library(rgdal)
library(sp)
# load data
total_data <- read.csv('../aggregated_data/CATANDUANES_total.csv')
# load shapefile
shapefile <- readOGR('catanduanes_shapefile.shp')
ggplot() +
geom_polygon(data = shapefile, colour = "black", fill = NA,  aes(x = long, y = lat, group = group, fill=Cases)) +
coord_fixed()
sf::sf_use_s2(FALSE)
# define prior
sdunif = "expression: logdens=-log_precision/2; return(logdens);"
pc_prior <- list(
prec = list(
prior = "pc.prec",
param = c(0.5 / 0.31, 0.01)
),
phi = list(
prior = "pc",
param = c(0.5, 2/3)
)
)
# build adjancency matrix from shapefile
nb <- poly2nb(shapefile)
nb2INLA("map.adj", nb)
g <- inla.read.graph(filename = "map.adj")
# define index for every polygon
shapefile$idarea <- 1:nrow(shapefile@data)
# combine data with shapefile
shapefile@data <- shapefile@data %>%
rename(Municipality = Labels)
shapefile@data <- shapefile@data %>%
full_join(total_data, by="Municipality")
# remove unnecessary columns
shapefile@data <- select(shapefile@data,-c(X,FID))
# run inla model (just for cases)
formula = Cases ~ f(idarea, model = "bym", graph = g, hyper = list(prec.unstruct = list(prior = sdunif), prec.spatial = list(prior = sdunif)))
mod$bym <- inla(formula, family="poisson", data=shapefile@data,control.compute=list(dic = TRUE, cpo = TRUE, waic = TRUE), control.predictor=list(compute=TRUE, cdf=c(log(1))))
rm(list=ls())
library(dplyr)
library(tidyr)
library(INLA)
library(spdep)
library(lubridate)
library(stringr)
library(purrr)
library(zoo)
library(tibble)
library(tsibble)
library(Matrix)
library(ggplot2)
library(INLAutils)
library(rgdal)
library(sp)
# load data
total_data <- read.csv('../aggregated_data/CATANDUANES_total.csv')
# load shapefile
shapefile <- readOGR('catanduanes_shapefile.shp')
ggplot() +
geom_polygon(data = shapefile, colour = "black", fill = NA,  aes(x = long, y = lat, group = group, fill=Cases)) +
coord_fixed()
sf::sf_use_s2(FALSE)
# define prior
sdunif = "expression: logdens=-log_precision/2; return(logdens);"
pc_prior <- list(
prec = list(
prior = "pc.prec",
param = c(0.5 / 0.31, 0.01)
),
phi = list(
prior = "pc",
param = c(0.5, 2/3)
)
)
# build adjancency matrix from shapefile
nb <- poly2nb(shapefile)
nb2INLA("map.adj", nb)
g <- inla.read.graph(filename = "map.adj")
# define index for every polygon
shapefile$idarea <- 1:nrow(shapefile@data)
# combine data with shapefile
shapefile@data <- shapefile@data %>%
rename(Municipality = Labels)
shapefile@data <- shapefile@data %>%
full_join(total_data, by="Municipality")
# remove unnecessary columns
shapefile@data <- select(shapefile@data,-c(X,FID))
# run inla model (just for cases)
formula = Cases ~ f(idarea, model = "bym", graph = g, hyper = list(prec.unstruct = list(prior = sdunif), prec.spatial = list(prior = sdunif)))
bym <- inla(formula, family="poisson", data=shapefile@data,control.compute=list(dic = TRUE, cpo = TRUE, waic = TRUE), control.predictor=list(compute=TRUE, cdf=c(log(1))))
# add fitted values to dataframe
shapefile@data$bym <-  bym$summary.fitted.values[, "mean"]
# compute relative risks
# plot relative risks on shapefile
View(shapefile@data)
rm(list=ls())
library(dplyr)
library(tidyr)
library(INLA)
library(spdep)
library(lubridate)
library(stringr)
library(purrr)
library(zoo)
library(tibble)
library(tsibble)
library(Matrix)
library(ggplot2)
library(INLAutils)
library(rgdal)
library(sp)
# load data
total_data <- read.csv('../aggregated_data/CATANDUANES_total.csv')
# load shapefile
shapefile <- readOGR('catanduanes_shapefile.shp')
ggplot() +
geom_polygon(data = shapefile, colour = "black", fill = NA,  aes(x = long, y = lat, group = group, fill=Cases)) +
coord_fixed()
sf::sf_use_s2(FALSE)
# define prior
sdunif = "expression: logdens=-log_precision/2; return(logdens);"
pc_prior <- list(
prec = list(
prior = "pc.prec",
param = c(0.5 / 0.31, 0.01)
),
phi = list(
prior = "pc",
param = c(0.5, 2/3)
)
)
# build adjancency matrix from shapefile
nb <- poly2nb(shapefile)
nb2INLA("map.adj", nb)
g <- inla.read.graph(filename = "map.adj")
# define index for every polygon
shapefile$idarea <- 1:nrow(shapefile@data)
# combine data with shapefile
shapefile@data <- shapefile@data %>%
rename(Municipality = Labels)
shapefile@data <- shapefile@data %>%
full_join(total_data, by="Municipality")
# remove unnecessary columns
shapefile@data <- select(shapefile@data,-c(X,FID))
# run inla model (just for cases)
formula <- Cases ~ f(idarea, model = "bym", graph = g, hyper = list(prec.unstruct = list(prior = sdunif), prec.spatial = list(prior = sdunif)))
bym <- inla(formula, family="poisson", data=shapefile@data,control.compute=list(dic = TRUE, cpo = TRUE, waic = TRUE), control.predictor=list(compute=TRUE, cdf=c(log(1))))
formula <- n ~ f(idarea, model = "bym2", graph = g, hyper = pc_prior)
bym2 <- inla(formula, family="poisson", data=shapefile@data,control.compute=list(dic = TRUE, cpo = TRUE, waic = TRUE), control.predictor=list(compute=TRUE, cdf=c(log(1))))
formula <- Cases ~ f(idarea, model = "bym", graph = g, hyper = list(prec.unstruct = list(prior = sdunif), prec.spatial = list(prior = sdunif)))
bym <- inla(formula, family="poisson", data=shapefile@data,control.compute=list(dic = TRUE, cpo = TRUE, waic = TRUE), control.predictor=list(compute=TRUE, cdf=c(log(1))))
formula <- n ~ f(idarea, model = "bym2", graph = g, hyper = pc_prior)
bym2 <- inla(formula, family="poisson", data=shapefile@data,control.compute=list(dic = TRUE, cpo = TRUE, waic = TRUE), control.predictor=list(compute=TRUE, cdf=c(log(1))))
formula <- n ~ f(idarea, model = "bym2", graph = g, hyper = pc_prior)
bym2 <- inla(formula, family="poisson", data=shapefile@data,control.compute=list(dic = TRUE, cpo = TRUE, waic = TRUE), control.predictor=list(compute=TRUE, cdf=c(log(1))))
formula2 <- Cases ~ f(idarea, model = "bym2", graph = g, hyper = pc_prior)
bym2 <- inla(formula2, family="poisson", data=shapefile@data,control.compute=list(dic = TRUE, cpo = TRUE, waic = TRUE), control.predictor=list(compute=TRUE, cdf=c(log(1))))
# run inla model (just for cases)
formula <- Cases ~ f(idarea, model = "bym", graph = g, hyper = list(prec.unstruct = list(prior = sdunif), prec.spatial = list(prior = sdunif)))
bym <- inla(formula, family="poisson", data=shapefile@data,control.compute=list(dic = TRUE, cpo = TRUE, waic = TRUE), control.predictor=list(compute=TRUE, cdf=c(log(1))))
formula2 <- Cases ~ f(idarea, model = "bym2", graph = g, hyper = pc_prior)
bym2 <- inla(formula2, family="poisson", data=shapefile@data,control.compute=list(dic = TRUE, cpo = TRUE, waic = TRUE), control.predictor=list(compute=TRUE, cdf=c(log(1))))
s
# add fitted values to dataframe
shapefile@data$bym <-  bym$summary.fitted.values[, "mean"]
shapefile@data$bym2 <-  bym2$summary.fitted.values[, "mean"]
View(shapefile)
View(shapefile)
View(shapefile@data)
summary(bym)
summary(bym2)
rm(list=ls())
library(dplyr)
library(tidyr)
library(INLA)
library(spdep)
library(lubridate)
library(stringr)
library(purrr)
library(zoo)
library(tibble)
library(tsibble)
library(Matrix)
library(ggplot2)
library(INLAutils)
library(rgdal)
library(sp)
# load data
total_data <- read.csv('../aggregated_data/CATANDUANES_total.csv')
getwd()
total_data <- read.csv('../aggregated_data/CATANDUANES_total.csv')
rm(list=ls())
library(dplyr)
library(tidyr)
library(INLA)
library(spdep)
library(lubridate)
library(stringr)
library(purrr)
library(zoo)
library(tibble)
library(tsibble)
library(Matrix)
library(ggplot2)
library(INLAutils)
library(rgdal)
library(sp)
# load data
total_data <- read.csv('../aggregated_data/CATANDUANES_total.csv')
# load shapefile
shapefile <- readOGR('catanduanes_shapefile.shp')
ggplot() +
geom_polygon(data = shapefile, colour = "black", fill = NA,  aes(x = long, y = lat, group = group, fill=Cases)) +
coord_fixed()
sf::sf_use_s2(FALSE)
# define prior
sdunif = "expression: logdens=-log_precision/2; return(logdens);"
pc_prior <- list(
prec = list(
prior = "pc.prec",
param = c(0.5 / 0.31, 0.01)
),
phi = list(
prior = "pc",
param = c(0.5, 2/3)
)
)
# build adjancency matrix from shapefile
nb <- poly2nb(shapefile)
nb2INLA("map.adj", nb)
g <- inla.read.graph(filename = "map.adj")
# define index for every polygon
shapefile$idarea <- 1:nrow(shapefile@data)
# combine data with shapefile
shapefile@data <- shapefile@data %>%
rename(Municipality = Labels)
shapefile@data <- shapefile@data %>%
full_join(total_data, by="Municipality")
# remove unnecessary columns
shapefile@data <- select(shapefile@data,-c(X,FID))
# run inla model (just for cases)
formula <- Cases ~ f(idarea, model = "bym", graph = g, hyper = list(prec.unstruct = list(prior = sdunif), prec.spatial = list(prior = sdunif)))
bym <- inla(formula, family="poisson", data=shapefile@data,control.compute=list(dic = TRUE, cpo = TRUE, waic = TRUE), control.predictor=list(compute=TRUE, cdf=c(log(1))))
formula2 <- Cases ~ f(idarea, model = "bym2", graph = g, hyper = pc_prior)
bym2 <- inla(formula2, family="poisson", data=shapefile@data,control.compute=list(dic = TRUE, cpo = TRUE, waic = TRUE), control.predictor=list(compute=TRUE, cdf=c(log(1))))
# add fitted values to dataframe
shapefile@data$bym <-  bym$summary.fitted.values[, "mean"]
shapefile@data$bym2 <-  bym2$summary.fitted.values[, "mean"]
summary(bym)
summary(bym2)
# compute relative risks
# plot relative risks on shapefile
View(shapefile@data)
summary(bym)
